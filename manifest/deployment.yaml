apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
  namespace: prod
type: Opaque
data:
  username: dXNlcm5hbWU=  # base64 for "username"
  password: cGFzc3dvcmQ=  # base64 for "password"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: surajtelakar/backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          value: "db.example.com"  # Dummy host
        - name: DB_PORT
          value: "5432"            # Default PostgreSQL port
        - name: DB_NAME
          value: "mydb"            # Dummy DB name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
      - name: postgres
        image: postgres:latest     # PostgreSQL image
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "mydb"            # Dummy DB name
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: prod
spec:
  type: NodePort
  ports:
    - port: 8080
      nodePort: 30001
  selector:
    app: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: surajtelakar/frontend:latest
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: prod
spec:
  type: NodePort
  ports:
    - port: 3000
      nodePort: 30002
  selector:
    app: frontend
